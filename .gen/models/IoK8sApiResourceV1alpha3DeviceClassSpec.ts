/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: unversioned
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { IoK8sApiCoreV1NodeSelector } from '../models/IoK8sApiCoreV1NodeSelector';
import { IoK8sApiResourceV1alpha3DeviceClassConfiguration } from '../models/IoK8sApiResourceV1alpha3DeviceClassConfiguration';
import { IoK8sApiResourceV1alpha3DeviceSelector } from '../models/IoK8sApiResourceV1alpha3DeviceSelector';
import { HttpFile } from '../http/http';

/**
* DeviceClassSpec is used in a [DeviceClass] to define what can be allocated and how to configure it.
*/
export class IoK8sApiResourceV1alpha3DeviceClassSpec {
    /**
    * Config defines configuration parameters that apply to each device that is claimed via this class. Some classses may potentially be satisfied by multiple drivers, so each instance of a vendor configuration applies to exactly one driver.  They are passed to the driver, but are not considered while allocating the claim.
    */
    'config'?: Array<IoK8sApiResourceV1alpha3DeviceClassConfiguration>;
    /**
    * Each selector must be satisfied by a device which is claimed via this class.
    */
    'selectors'?: Array<IoK8sApiResourceV1alpha3DeviceSelector>;
    'suitableNodes'?: IoK8sApiCoreV1NodeSelector;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "config",
            "baseName": "config",
            "type": "Array<IoK8sApiResourceV1alpha3DeviceClassConfiguration>",
            "format": ""
        },
        {
            "name": "selectors",
            "baseName": "selectors",
            "type": "Array<IoK8sApiResourceV1alpha3DeviceSelector>",
            "format": ""
        },
        {
            "name": "suitableNodes",
            "baseName": "suitableNodes",
            "type": "IoK8sApiCoreV1NodeSelector",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return IoK8sApiResourceV1alpha3DeviceClassSpec.attributeTypeMap;
    }

    public constructor() {
    }
}
